#include <PostgreSQLClient.h>
#include <WiFiClientSecure.h>
#include <Firebase_ESP_Client.h>
#include <NTPClient.h>
#include <WiFiUdp.h>

// Constants for Firebase
#define API_KEY "your_firebase_api_key"
#define DATABASE_URL "your_firebase_database_url"

// Constants for PostgreSQL
const char *host = "your-postgresql-host.render.com";
const int port = 5432;
const char *user = "postgres";
const char *password = "your_postgres_password";
const char *database = "your_database_name";

const char *ssid = "your_wifi_ssid";
const char *password_wifi = "your_wifi_password";

// Firebase variables
FirebaseData fbdo;
FirebaseConfig config;
FirebaseAuth auth;
FirebaseJson json;

// PostgreSQL variables
WiFiClientSecure client;
PostgreSQLClient pg_client(client);

void setup() {
    Serial.begin(115200);
    connectWiFi(); // Function to connect to WiFi
    connectToPostgreSQL(); // Function to connect to PostgreSQL
    initializeFirebase(); // Function to initialize Firebase
}

void loop() {
    // Example: If sensorValue is 100, send data to both Firebase and PostgreSQL
    int sensorValue = 100;

    sendDataToFirebase(sensorValue);
    sendDataToPostgreSQL(sensorValue);

    delay(5000); // Adjust delay according to your requirements
}

void connectWiFi() {
    Serial.println();
    Serial.print("Connecting to WiFi");

    WiFi.begin(ssid, password_wifi);

    while (WiFi.status() != WL_CONNECTED) {
        delay(500);
        Serial.print(".");
    }

    Serial.println("");
    Serial.println("WiFi connected");
    Serial.print("IP address: ");
    Serial.println(WiFi.localIP());
}

void connectToPostgreSQL() {
    if (pg_client.connect(host, port, user, password, database)) {
        Serial.println("Connected to PostgreSQL!");
    } else {
        Serial.println("Connection to PostgreSQL failed!");
    }
}

void initializeFirebase() {
    config.api_key = API_KEY;
    config.database_url = DATABASE_URL;

    if (Firebase.signUp(&config, &auth, "", "")) {
        Serial.println("Firebase initialized");
    } else {
        Serial.println("Firebase initialization failed");
    }
}

void sendDataToFirebase(int sensorValue) {
    String dataPath = "/sensorData";

    json.set("value", sensorValue);

    if (Firebase.RTDB.setJSON(&fbdo, dataPath, &json)) {
        Serial.println("Data sent to Firebase successfully");
    } else {
        Serial.println("Failed to send data to Firebase");
    }
}

void sendDataToPostgreSQL(int sensorValue) {
    String query = "INSERT INTO your_table_name (sensor_data_column) VALUES (" + String(sensorValue) + ");";

    if (pg_client.execute(query.c_str())) {
        Serial.println("Data sent to PostgreSQL successfully");
    } else {
        Serial.println("Failed to send data to PostgreSQL");
    }
}
